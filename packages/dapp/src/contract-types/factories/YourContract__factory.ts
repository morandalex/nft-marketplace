/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "perc",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "balanceEth",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perc",
        type: "uint256",
      },
    ],
    name: "createNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsListed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "perc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct YourContract.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "perc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct YourContract.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "perc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct YourContract.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "resellToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266038d7ea4c680006009553480156200001c57600080fd5b50604080518082018252601c81527f412042656174204265796f6e64204e4654204d726b6574706c6163650000000060208083019182528351808501909452600684526510509093919560d21b9084015281519192916200008091600091620000b1565b50805162000096906001906020840190620000b1565b5050600a80546001600160a01b031916331790555062000194565b828054620000bf9062000157565b90600052602060002090601f016020900481019282620000e357600085556200012e565b82601f10620000fe57805160ff19168380011785556200012e565b828001600101855582156200012e579182015b828111156200012e57825182559160200191906001019062000111565b506200013c92915062000140565b5090565b5b808211156200013c576000815560010162000141565b600181811c908216806200016c57607f821691505b602082108114156200018e57634e487b7160e01b600052602260045260246000fd5b50919050565b61281f80620001a46000396000f3fe6080604052600436106101655760003560e01c80636352211e116100d1578063b69ef8a81161008a578063d0e30db011610064578063d0e30db0146103ed578063d96a094a146103f5578063e219fc7514610408578063e985e9c51461041b57600080fd5b8063b69ef8a81461039a578063b88d4fde146103ad578063c87b56dd146103cd57600080fd5b80636352211e146102f257806370a0823114610312578063894760691461033257806395d89b4114610352578063a22cb46514610367578063ae677aa31461038757600080fd5b806312e855851161012357806312e855851461025e578063202e37401461027357806323b872dd146102885780633ccfd60b146102a857806342842e0e146102bd57806345f8fa80146102dd57600080fd5b8062b2402c1461016a57806301ffc9a71461019057806306fdde03146101c0578063081812fc146101e2578063095ea7b31461021a5780630f08efe01461023c575b600080fd5b61017d610178366004612399565b610464565b6040519081526020015b60405180910390f35b34801561019c57600080fd5b506101b06101ab36600461235f565b6104a8565b6040519015158152602001610187565b3480156101cc57600080fd5b506101d56104fa565b604051610187919061257b565b3480156101ee57600080fd5b506102026101fd3660046123fb565b61058c565b6040516001600160a01b039091168152602001610187565b34801561022657600080fd5b5061023a610235366004612318565b610619565b005b34801561024857600080fd5b5061025161072f565b60405161018791906124e7565b34801561026a57600080fd5b5060095461017d565b34801561027f57600080fd5b506102516108bc565b34801561029457600080fd5b5061023a6102a3366004612229565b610a87565b3480156102b457600080fd5b5061023a610ab8565b3480156102c957600080fd5b5061023a6102d8366004612229565b610b41565b3480156102e957600080fd5b50610251610b5c565b3480156102fe57600080fd5b5061020261030d3660046123fb565b610d27565b34801561031e57600080fd5b5061017d61032d3660046121db565b610d9e565b34801561033e57600080fd5b5061023a61034d3660046121db565b610e25565b34801561035e57600080fd5b506101d5610f82565b34801561037357600080fd5b5061023a6103823660046122e1565b610f91565b61023a6103953660046123fb565b610fa0565b3480156103a657600080fd5b504761017d565b3480156103b957600080fd5b5061023a6103c8366004612265565b611018565b3480156103d957600080fd5b506101d56103e83660046123fb565b611050565b61023a6111bf565b61023a6104033660046123fb565b61120e565b61023a61041636600461242d565b611410565b34801561042757600080fd5b506101b06104363660046121f6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610474600780546001019055565b600061047f60075490565b905061048b3382611509565b610495818661163c565b6104a08185856116c7565b949350505050565b60006001600160e01b031982166380ac58cd60e01b14806104d957506001600160e01b03198216635b5e139f60e01b145b806104f457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461050990612703565b80601f016020809104026020016040519081016040528092919081815260200182805461053590612703565b80156105825780601f1061055757610100808354040283529160200191610582565b820191906000526020600020905b81548152906001019060200180831161056557829003601f168201915b5050505050905090565b60006105978261191b565b6105fd5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061062482610d27565b9050806001600160a01b0316836001600160a01b031614156106925760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105f4565b336001600160a01b03821614806106ae57506106ae8133610436565b6107205760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105f4565b61072a8383611938565b505050565b6060600061073c60075490565b9050600061074960085490565b60075461075691906126c0565b90506000808267ffffffffffffffff811115610774576107746127af565b6040519080825280602002602001820160405280156107ad57816020015b61079a612074565b8152602001906001900390816107925790505b50905060005b848110156108b35730600b60006107cb846001612675565b81526020810191909152604001600020600301546001600160a01b031614156108a15760006107fb826001612675565b6000818152600b6020908152604091829020825160e0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830152600581015460a0830152600681015460ff16151560c083015285519293509185908790811061088657610886612799565b602090810291909101015261089c600186612675565b945050505b806108ab8161273e565b9150506107b3565b50949350505050565b606060006108c960075490565b905060008060005b8381101561092c5733600b60006108e9846001612675565b81526020810191909152604001600020600301546001600160a01b0316141561091a57610917600184612675565b92505b806109248161273e565b9150506108d1565b5060008267ffffffffffffffff811115610948576109486127af565b60405190808252806020026020018201604052801561098157816020015b61096e612074565b8152602001906001900390816109665790505b50905060005b848110156108b35733600b600061099f846001612675565b81526020810191909152604001600020600301546001600160a01b03161415610a755760006109cf826001612675565b6000818152600b6020908152604091829020825160e0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830152600581015460a0830152600681015460ff16151560c0830152855192935091859087908110610a5a57610a5a612799565b6020908102919091010152610a70600186612675565b945050505b80610a7f8161273e565b915050610987565b610a9133826119a6565b610aad5760405162461bcd60e51b81526004016105f490612624565b61072a838383611a8c565b600a546001600160a01b03163314610b125760405162461bcd60e51b815260206004820152601b60248201527f4d73672e73656e646572206973206e6f7420746865206f776e6572000000000060448201526064016105f4565b60405133904780156108fc02916000818181858888f19350505050158015610b3e573d6000803e3d6000fd5b50565b61072a83838360405180602001604052806000815250611018565b60606000610b6960075490565b905060008060005b83811015610bcc5733600b6000610b89846001612675565b81526020810191909152604001600020600201546001600160a01b03161415610bba57610bb7600184612675565b92505b80610bc48161273e565b915050610b71565b5060008267ffffffffffffffff811115610be857610be86127af565b604051908082528060200260200182016040528015610c2157816020015b610c0e612074565b815260200190600190039081610c065790505b50905060005b848110156108b35733600b6000610c3f846001612675565b81526020810191909152604001600020600201546001600160a01b03161415610d15576000610c6f826001612675565b6000818152600b6020908152604091829020825160e0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830152600581015460a0830152600681015460ff16151560c0830152855192935091859087908110610cfa57610cfa612799565b6020908102919091010152610d10600186612675565b945050505b80610d1f8161273e565b915050610c27565b6000818152600260205260408120546001600160a01b0316806104f45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105f4565b60006001600160a01b038216610e095760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105f4565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610e7f5760405162461bcd60e51b815260206004820152601b60248201527f4d73672e73656e646572206973206e6f7420746865206f776e6572000000000060448201526064016105f4565b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381600087803b158015610ecc57600080fd5b505af1158015610ee0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f049190612414565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610f4a57600080fd5b505af1158015610f5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190612342565b60606001805461050990612703565b610f9c338383611c2c565b5050565b600a546001600160a01b031633146110135760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79206d61726b6574706c616365206f776e65722063616e20757064617460448201526f32903634b9ba34b73390383934b1b29760811b60648201526084016105f4565b600955565b61102233836119a6565b61103e5760405162461bcd60e51b81526004016105f490612624565b61104a84848484611cfb565b50505050565b606061105b8261191b565b6110c15760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016105f4565b600082815260066020526040812080546110da90612703565b80601f016020809104026020016040519081016040528092919081815260200182805461110690612703565b80156111535780601f1061112857610100808354040283529160200191611153565b820191906000526020600020905b81548152906001019060200180831161113657829003601f168201915b50505050509050600061117160408051602081019091526000815290565b9050805160001415611184575092915050565b8151156111b657808260405160200161119e92919061247b565b60405160208183030381529060405292505050919050565b6104a084611d2e565b66038d7ea4c6800034101561120c5760405162461bcd60e51b8152602060048201526013602482015272283632b0b9b2901f10181718189032ba3432b960691b60448201526064016105f4565b565b6000818152600b602052604090206005015434811115611298576040805162461bcd60e51b81526020600482015260248101919091527f506c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c6574652074686520707572636861736560648201526084016105f4565b6000828152600b602052604090206003810180546001600160a01b03191633179055600601805460ff191660011790556112d6600880546001019055565b6112e1303384611a8c565b600a546009546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561131d573d6000803e3d6000fd5b506000828152600b6020526040812060040154906113476103e861134184826126c0565b90611e06565b61135190346126a1565b6000858152600b60205260408082206002015490519293506001600160a01b03169183156108fc0291849190818181858888f1935050505015801561139a573d6000803e3d6000fd5b506000848152600b60205260409020600101546001600160a01b03166108fc6113c383346126c0565b6040518115909202916000818181858888f193505050501580156113eb573d6000803e3d6000fd5b505050600091825250600b6020526040902060020180546001600160a01b0319169055565b6000828152600b60205260409020600301546001600160a01b0316331461148c5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206974656d206f776e65722063616e20706572666f726d20746869736044820152691037b832b930ba34b7b760b11b60648201526084016105f4565b6009543410156114ae5760405162461bcd60e51b81526004016105f4906125e0565b6000828152600b6020526040902060068101805460ff19169055600581018290556002810180546001600160a01b0319908116331790915560039091018054909116301790556114fe6008611e12565b610f9c333084611a8c565b6001600160a01b03821661155f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105f4565b6115688161191b565b156115b55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105f4565b6001600160a01b03821660009081526003602052604081208054600192906115de908490612675565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6116458261191b565b6116a85760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105f4565b6000828152600660209081526040909120825161072a928401906120b0565b66038d7ea4c680008210156117445760405162461bcd60e51b815260206004820152603a60248201527f5072696365206d757374206265206174206c656173742031303030303030303060448201527f3030303030303020776569203d2020302e30303120657468657200000000000060648201526084016105f4565b6009543410156117665760405162461bcd60e51b81526004016105f4906125e0565b600081116117af5760405162461bcd60e51b8152602060048201526016602482015275050657263656e74616765206d757374206265203e20360541b60448201526064016105f4565b6103e881106118005760405162461bcd60e51b815260206004820152601960248201527f50657263656e74616765206d757374206265203c20313030300000000000000060448201526064016105f4565b6040805160e08101825284815233602080830182815283850183815230606086018181526080870189815260a088018b8152600060c08a018181528e8252600b909852999099209751885593516001880180546001600160a01b03199081166001600160a01b03938416179091559351600289018054861691831691909117905590516003880180549094169116179091559051600485015593516005840155516006909201805460ff1916921515929092179091556118c09185611a8c565b6040805133808252602082015230818301526060810183905260808101849052600060a0820152905184917fa5d9d913ac4de93e8f5dc9a8834f347d521cd0daf35756b44fe413e9f3401979919081900360c00190a2505050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061196d82610d27565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006119b18261191b565b611a125760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105f4565b6000611a1d83610d27565b9050806001600160a01b0316846001600160a01b03161480611a585750836001600160a01b0316611a4d8461058c565b6001600160a01b0316145b806104a057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166104a0565b826001600160a01b0316611a9f82610d27565b6001600160a01b031614611b075760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105f4565b6001600160a01b038216611b695760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105f4565b611b74600082611938565b6001600160a01b0383166000908152600360205260408120805460019290611b9d9084906126c0565b90915550506001600160a01b0382166000908152600360205260408120805460019290611bcb908490612675565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415611c8e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105f4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d06848484611a8c565b611d1284848484611e69565b61104a5760405162461bcd60e51b81526004016105f49061258e565b6060611d398261191b565b611d9d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105f4565b6000611db460408051602081019091526000815290565b90506000815111611dd45760405180602001604052806000815250611dff565b80611dde84611f76565b604051602001611def92919061247b565b6040516020818303038152906040525b9392505050565b6000611dff828461268d565b805480611e615760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016105f4565b600019019055565b60006001600160a01b0384163b15611f6b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ead9033908990889088906004016124aa565b602060405180830381600087803b158015611ec757600080fd5b505af1925050508015611ef7575060408051601f3d908101601f19168201909252611ef49181019061237c565b60015b611f51573d808015611f25576040519150601f19603f3d011682016040523d82523d6000602084013e611f2a565b606091505b508051611f495760405162461bcd60e51b81526004016105f49061258e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506104a0565b506001949350505050565b606081611f9a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611fc45780611fae8161273e565b9150611fbd9050600a8361268d565b9150611f9e565b60008167ffffffffffffffff811115611fdf57611fdf6127af565b6040519080825280601f01601f191660200182016040528015612009576020820181803683370190505b5090505b84156104a05761201e6001836126c0565b915061202b600a86612759565b612036906030612675565b60f81b81838151811061204b5761204b612799565b60200101906001600160f81b031916908160001a90535061206d600a8661268d565b945061200d565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b8280546120bc90612703565b90600052602060002090601f0160209004810192826120de5760008555612124565b82601f106120f757805160ff1916838001178555612124565b82800160010185558215612124579182015b82811115612124578251825591602001919060010190612109565b50612130929150612134565b5090565b5b808211156121305760008155600101612135565b600067ffffffffffffffff80841115612164576121646127af565b604051601f8501601f19908116603f0116810190828211818310171561218c5761218c6127af565b816040528093508581528686860111156121a557600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146121d657600080fd5b919050565b6000602082840312156121ed57600080fd5b611dff826121bf565b6000806040838503121561220957600080fd5b612212836121bf565b9150612220602084016121bf565b90509250929050565b60008060006060848603121561223e57600080fd5b612247846121bf565b9250612255602085016121bf565b9150604084013590509250925092565b6000806000806080858703121561227b57600080fd5b612284856121bf565b9350612292602086016121bf565b925060408501359150606085013567ffffffffffffffff8111156122b557600080fd5b8501601f810187136122c657600080fd5b6122d587823560208401612149565b91505092959194509250565b600080604083850312156122f457600080fd5b6122fd836121bf565b9150602083013561230d816127c5565b809150509250929050565b6000806040838503121561232b57600080fd5b612334836121bf565b946020939093013593505050565b60006020828403121561235457600080fd5b8151611dff816127c5565b60006020828403121561237157600080fd5b8135611dff816127d3565b60006020828403121561238e57600080fd5b8151611dff816127d3565b6000806000606084860312156123ae57600080fd5b833567ffffffffffffffff8111156123c557600080fd5b8401601f810186136123d657600080fd5b6123e586823560208401612149565b9660208601359650604090950135949350505050565b60006020828403121561240d57600080fd5b5035919050565b60006020828403121561242657600080fd5b5051919050565b6000806040838503121561244057600080fd5b50508035926020909101359150565b600081518084526124678160208601602086016126d7565b601f01601f19169290920160200192915050565b6000835161248d8184602088016126d7565b8351908301906124a18183602088016126d7565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124dd9083018461244f565b9695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561256e57815180518552868101516001600160a01b039081168887015286820151811687870152606080830151909116908601526080808201519086015260a0808201519086015260c09081015115159085015260e09093019290850190600101612504565b5091979650505050505050565b602081526000611dff602083018461244f565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f5072696365206d75737420626520657175616c20746f206c697374696e6720706040820152637269636560e01b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156126885761268861276d565b500190565b60008261269c5761269c612783565b500490565b60008160001904831182151516156126bb576126bb61276d565b500290565b6000828210156126d2576126d261276d565b500390565b60005b838110156126f25781810151838201526020016126da565b8381111561104a5750506000910152565b600181811c9082168061271757607f821691505b6020821081141561273857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127525761275261276d565b5060010190565b60008261276857612768612783565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610b3e57600080fd5b6001600160e01b031981168114610b3e57600080fdfea2646970667358221220dfb6401cf80679a371167a5859dfce252c6cdbf1cb4baa1ae4c19008632d7d1464736f6c63430008060033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
