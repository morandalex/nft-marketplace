/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../NFTMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "balanceEth",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsListed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "resellToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266038d7ea4c680006009553480156200001c57600080fd5b506040516200280f3803806200280f8339810160408190526200003f91620001e9565b815182908290620000589060009060208501906200008c565b5080516200006e9060019060208401906200008c565b5050600a80546001600160a01b0319163317905550620002a6915050565b8280546200009a9062000253565b90600052602060002090601f016020900481019282620000be576000855562000109565b82601f10620000d957805160ff191683800117855562000109565b8280016001018555821562000109579182015b8281111562000109578251825591602001919060010190620000ec565b50620001179291506200011b565b5090565b5b808211156200011757600081556001016200011c565b600082601f8301126200014457600080fd5b81516001600160401b038082111562000161576200016162000290565b604051601f8301601f19908116603f011681019082821181831017156200018c576200018c62000290565b81604052838152602092508683858801011115620001a957600080fd5b600091505b83821015620001cd5785820183015181830184015290820190620001ae565b83821115620001df5760008385830101525b9695505050505050565b60008060408385031215620001fd57600080fd5b82516001600160401b03808211156200021557600080fd5b620002238683870162000132565b935060208501519150808211156200023a57600080fd5b50620002498582860162000132565b9150509250929050565b600181811c908216806200026857607f821691505b602082108114156200028a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61255980620002b66000396000f3fe6080604052600436106101665760003560e01c80636352211e116100d1578063b69ef8a81161008a578063d0e30db011610064578063d0e30db0146103ea578063d96a094a146103f2578063e219fc7514610405578063e985e9c51461041857600080fd5b8063b69ef8a814610397578063b88d4fde146103aa578063c87b56dd146103ca57600080fd5b80636352211e146102ef57806370a082311461030f57806395d89b411461032f5780639e281a9814610344578063a22cb46514610364578063ae677aa31461038457600080fd5b8063202e374011610123578063202e37401461025d57806323b872dd146102725780633ccfd60b146102925780633e73720c146102a757806342842e0e146102ba57806345f8fa80146102da57600080fd5b806301ffc9a71461016b57806306fdde03146101a0578063081812fc146101c2578063095ea7b3146101fa5780630f08efe01461021c57806312e855851461023e575b600080fd5b34801561017757600080fd5b5061018b6101863660046120f2565b610461565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101b56104b3565b60405161019791906122d4565b3480156101ce57600080fd5b506101e26101dd366004612185565b610545565b6040516001600160a01b039091168152602001610197565b34801561020657600080fd5b5061021a6102153660046120ab565b6105d2565b005b34801561022857600080fd5b506102316106e8565b6040516101979190612258565b34801561024a57600080fd5b506009545b604051908152602001610197565b34801561026957600080fd5b50610231610880565b34801561027e57600080fd5b5061021a61028d366004611fbc565b610a56565b34801561029e57600080fd5b5061021a610a87565b61024f6102b536600461212c565b610b10565b3480156102c657600080fd5b5061021a6102d5366004611fbc565b610b52565b3480156102e657600080fd5b50610231610b6d565b3480156102fb57600080fd5b506101e261030a366004612185565b610d43565b34801561031b57600080fd5b5061024f61032a366004611f6e565b610dba565b34801561033b57600080fd5b506101b5610e41565b34801561035057600080fd5b5061021a61035f3660046120ab565b610e50565b34801561037057600080fd5b5061021a61037f366004612074565b610ed8565b61021a610392366004612185565b610ee7565b3480156103a357600080fd5b504761024f565b3480156103b657600080fd5b5061021a6103c5366004611ff8565b610f5f565b3480156103d657600080fd5b506101b56103e5366004612185565b610f91565b61021a611108565b61021a610400366004612185565b611156565b61021a61041336600461219e565b6112be565b34801561042457600080fd5b5061018b610433366004611f89565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061049257506001600160e01b03198216635b5e139f60e01b145b806104ad57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104c29061243d565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee9061243d565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050505050905090565b6000610550826113b6565b6105b65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105dd82610d43565b9050806001600160a01b0316836001600160a01b0316141561064b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105ad565b336001600160a01b038216148061066757506106678133610433565b6106d95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105ad565b6106e383836113d3565b505050565b606060006106f560075490565b9050600061070260085490565b60075461070f91906123fa565b90506000808267ffffffffffffffff81111561072d5761072d6124e9565b60405190808252806020026020018201604052801561078657816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161074b5790505b50905060005b848110156108775730600b60006107a48460016123ce565b81526020810191909152604001600020600201546001600160a01b031614156108655760006107d48260016123ce565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff16151560808201528551929350909185908790811061084a5761084a6124d3565b60209081029190910101526108606001866123ce565b945050505b8061086f81612478565b91505061078c565b50949350505050565b6060600061088d60075490565b905060008060005b838110156108f05733600b60006108ad8460016123ce565b81526020810191909152604001600020600201546001600160a01b031614156108de576108db6001846123ce565b92505b806108e881612478565b915050610895565b5060008267ffffffffffffffff81111561090c5761090c6124e9565b60405190808252806020026020018201604052801561096557816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161092a5790505b50905060005b848110156108775733600b60006109838460016123ce565b81526020810191909152604001600020600201546001600160a01b03161415610a445760006109b38260016123ce565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff161515608082015285519293509091859087908110610a2957610a296124d3565b6020908102919091010152610a3f6001866123ce565b945050505b80610a4e81612478565b91505061096b565b610a603382611441565b610a7c5760405162461bcd60e51b81526004016105ad9061237d565b6106e3838383611527565b600a546001600160a01b03163314610ae15760405162461bcd60e51b815260206004820152601b60248201527f4d73672e73656e646572206973206e6f7420746865206f776e6572000000000060448201526064016105ad565b60405133904780156108fc02916000818181858888f19350505050158015610b0d573d6000803e3d6000fd5b50565b6000610b20600780546001019055565b6000610b2b60075490565b9050610b3733826116c7565b610b4181856117fa565b610b4b8184611885565b9392505050565b6106e383838360405180602001604052806000815250610f5f565b60606000610b7a60075490565b905060008060005b83811015610bdd5733600b6000610b9a8460016123ce565b81526020810191909152604001600020600101546001600160a01b03161415610bcb57610bc86001846123ce565b92505b80610bd581612478565b915050610b82565b5060008267ffffffffffffffff811115610bf957610bf96124e9565b604051908082528060200260200182016040528015610c5257816020015b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610c175790505b50905060005b848110156108775733600b6000610c708460016123ce565b81526020810191909152604001600020600101546001600160a01b03161415610d31576000610ca08260016123ce565b6000818152600b6020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201546060820152600482015460ff161515608082015285519293509091859087908110610d1657610d166124d3565b6020908102919091010152610d2c6001866123ce565b945050505b80610d3b81612478565b915050610c58565b6000818152600260205260408120546001600160a01b0316806104ad5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105ad565b60006001600160a01b038216610e255760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105ad565b506001600160a01b031660009081526003602052604090205490565b6060600180546104c29061243d565b60405163a9059cbb60e01b81523360048201526024810182905282906001600160a01b0382169063a9059cbb90604401602060405180830381600087803b158015610e9a57600080fd5b505af1158015610eae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed291906120d5565b50505050565b610ee3338383611a08565b5050565b600a546001600160a01b03163314610f5a5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79206d61726b6574706c616365206f776e65722063616e20757064617460448201526f32903634b9ba34b73390383934b1b29760811b60648201526084016105ad565b600955565b610f693383611441565b610f855760405162461bcd60e51b81526004016105ad9061237d565b610ed284848484611ad7565b6060610f9c826113b6565b6110025760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016105ad565b6000828152600660205260408120805461101b9061243d565b80601f01602080910402602001604051908101604052809291908181526020018280546110479061243d565b80156110945780601f1061106957610100808354040283529160200191611094565b820191906000526020600020905b81548152906001019060200180831161107757829003601f168201915b5050505050905060006110b260408051602081019091526000815290565b90508051600014156110c5575092915050565b8151156110f75780826040516020016110df9291906121ec565b60405160208183030381529060405292505050919050565b61110084611b0a565b949350505050565b66038d7ea4c6800034116111545760405162461bcd60e51b8152602060048201526013602482015272283632b0b9b2901f10181718189032ba3432b960691b60448201526064016105ad565b565b6000818152600b60205260409020600301543481146111df576040805162461bcd60e51b81526020600482015260248101919091527f506c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c6574652074686520707572636861736560648201526084016105ad565b6000828152600b602052604090206002810180546001600160a01b0319908116331790915560048201805460ff191660019081179091559091018054909116905561122e600880546001019055565b611239303384611527565b600a546009546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611275573d6000803e3d6000fd5b506000828152600b60205260408082206001015490516001600160a01b03909116913480156108fc02929091818181858888f193505050501580156106e3573d6000803e3d6000fd5b6000828152600b60205260409020600201546001600160a01b0316331461133a5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206974656d206f776e65722063616e20706572666f726d20746869736044820152691037b832b930ba34b7b760b11b60648201526084016105ad565b600954341461135b5760405162461bcd60e51b81526004016105ad90612339565b6000828152600b6020526040902060048101805460ff19169055600381018290556001810180546001600160a01b0319908116331790915560029091018054909116301790556113ab6008611be1565b610ee3333084611527565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061140882610d43565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061144c826113b6565b6114ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105ad565b60006114b883610d43565b9050806001600160a01b0316846001600160a01b031614806114f35750836001600160a01b03166114e884610545565b6001600160a01b0316145b8061110057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611100565b826001600160a01b031661153a82610d43565b6001600160a01b0316146115a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105ad565b6001600160a01b0382166116045760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105ad565b61160f6000826113d3565b6001600160a01b03831660009081526003602052604081208054600192906116389084906123fa565b90915550506001600160a01b03821660009081526003602052604081208054600192906116669084906123ce565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661171d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105ad565b611726816113b6565b156117735760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105ad565b6001600160a01b038216600090815260036020526040812080546001929061179c9084906123ce565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611803826113b6565b6118665760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105ad565b600082815260066020908152604090912082516106e392840190611e43565b66038d7ea4c680008110156119025760405162461bcd60e51b815260206004820152603a60248201527f5072696365206d757374206265206174206c656173742031303030303030303060448201527f3030303030303020776569203d2020302e30303120657468657200000000000060648201526084016105ad565b60095434146119235760405162461bcd60e51b81526004016105ad90612339565b6040805160a08101825283815233602080830182815230848601818152606086018881526000608088018181528b8252600b909652979097209551865591516001860180546001600160a01b03199081166001600160a01b0393841617909155925160028701805490941691161790915593516003840155516004909201805460ff1916921515929092179091556119bb9184611527565b604080513381523060208201529081018290526000606082015282907fb640004f1d14576d0c209e240cad0410e0d8c0c33a09375861fbadae2588a98d9060800160405180910390a25050565b816001600160a01b0316836001600160a01b03161415611a6a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105ad565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611ae2848484611527565b611aee84848484611c38565b610ed25760405162461bcd60e51b81526004016105ad906122e7565b6060611b15826113b6565b611b795760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105ad565b6000611b9060408051602081019091526000815290565b90506000815111611bb05760405180602001604052806000815250610b4b565b80611bba84611d45565b604051602001611bcb9291906121ec565b6040516020818303038152906040529392505050565b805480611c305760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016105ad565b600019019055565b60006001600160a01b0384163b15611d3a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c7c90339089908890889060040161221b565b602060405180830381600087803b158015611c9657600080fd5b505af1925050508015611cc6575060408051601f3d908101601f19168201909252611cc39181019061210f565b60015b611d20573d808015611cf4576040519150601f19603f3d011682016040523d82523d6000602084013e611cf9565b606091505b508051611d185760405162461bcd60e51b81526004016105ad906122e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611100565b506001949350505050565b606081611d695750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d935780611d7d81612478565b9150611d8c9050600a836123e6565b9150611d6d565b60008167ffffffffffffffff811115611dae57611dae6124e9565b6040519080825280601f01601f191660200182016040528015611dd8576020820181803683370190505b5090505b841561110057611ded6001836123fa565b9150611dfa600a86612493565b611e059060306123ce565b60f81b818381518110611e1a57611e1a6124d3565b60200101906001600160f81b031916908160001a905350611e3c600a866123e6565b9450611ddc565b828054611e4f9061243d565b90600052602060002090601f016020900481019282611e715760008555611eb7565b82601f10611e8a57805160ff1916838001178555611eb7565b82800160010185558215611eb7579182015b82811115611eb7578251825591602001919060010190611e9c565b50611ec3929150611ec7565b5090565b5b80821115611ec35760008155600101611ec8565b600067ffffffffffffffff80841115611ef757611ef76124e9565b604051601f8501601f19908116603f01168101908282118183101715611f1f57611f1f6124e9565b81604052809350858152868686011115611f3857600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611f6957600080fd5b919050565b600060208284031215611f8057600080fd5b610b4b82611f52565b60008060408385031215611f9c57600080fd5b611fa583611f52565b9150611fb360208401611f52565b90509250929050565b600080600060608486031215611fd157600080fd5b611fda84611f52565b9250611fe860208501611f52565b9150604084013590509250925092565b6000806000806080858703121561200e57600080fd5b61201785611f52565b935061202560208601611f52565b925060408501359150606085013567ffffffffffffffff81111561204857600080fd5b8501601f8101871361205957600080fd5b61206887823560208401611edc565b91505092959194509250565b6000806040838503121561208757600080fd5b61209083611f52565b915060208301356120a0816124ff565b809150509250929050565b600080604083850312156120be57600080fd5b6120c783611f52565b946020939093013593505050565b6000602082840312156120e757600080fd5b8151610b4b816124ff565b60006020828403121561210457600080fd5b8135610b4b8161250d565b60006020828403121561212157600080fd5b8151610b4b8161250d565b6000806040838503121561213f57600080fd5b823567ffffffffffffffff81111561215657600080fd5b8301601f8101851361216757600080fd5b61217685823560208401611edc565b95602094909401359450505050565b60006020828403121561219757600080fd5b5035919050565b600080604083850312156121b157600080fd5b50508035926020909101359150565b600081518084526121d8816020860160208601612411565b601f01601f19169290920160200192915050565b600083516121fe818460208801612411565b835190830190612212818360208801612411565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061224e908301846121c0565b9695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156122c757815180518552868101516001600160a01b03908116888701528682015116868601526060808201519086015260809081015115159085015260a09093019290850190600101612275565b5091979650505050505050565b602081526000610b4b60208301846121c0565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f5072696365206d75737420626520657175616c20746f206c697374696e6720706040820152637269636560e01b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156123e1576123e16124a7565b500190565b6000826123f5576123f56124bd565b500490565b60008282101561240c5761240c6124a7565b500390565b60005b8381101561242c578181015183820152602001612414565b83811115610ed25750506000910152565b600181811c9082168061245157607f821691505b6020821081141561247257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561248c5761248c6124a7565b5060010190565b6000826124a2576124a26124bd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610b0d57600080fd5b6001600160e01b031981168114610b0d57600080fdfea26469706673582212206f0b995480fe5cdc572bf7b59c41ff34181ad21c15b971079f9045e95d19a35064736f6c63430008060033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<NFTMarketplace>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
